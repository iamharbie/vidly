
@{
    ViewBag.Title = "New Rental Form";
}

<h2>New Rental Form</h2>


<form id="newRental">

   <!----div.form-group>label+input[type='text'].form-control-->  

    <div class="form-group">
        <label>Customer</label>
        <div class="tt-container">
            <input id="customer" data-rule-validCustomer="true" required type="text" name="customer" value="" class="form-control" />
        </div>
        </div>

    <div class="form-group" >
        <label>Movies</label>
        <div class="tt-container">
            <input id="movie" data-rule-atLeastAMovie="true" type="text" name="movie" value="" class="form-control" />
        </div>
    </div>

    <div class="row">
        <div class="col-md-4">
            <ul id="movies" class="list-group"></ul>

        </div>

    </div>
    

    <button class="btn btn-primary">Submit</button>


</form>


@section scripts{
    
    @Scripts.Render("~/bundles/jqueryval");
    <script>

        $(document).ready(function () {
            var viewmodel = {
                movieIds:[]
            };
              var customers = new Bloodhound({
              datumTokenizer: Bloodhound.tokenizers.obj.whitespace('name'),
              queryTokenizer: Bloodhound.tokenizers.whitespace,
              limit: Number.MAX_VALUE,
              remote: {
                url: '/api/customers?query=%QUERY',
                wildcard: '%QUERY'
              }
            });

             // customers.initialize()

            $('#customer').typeahead({
                minLength: 2,
                highlight: true
                        }, {
              name: 'customers',
              display: 'name',
              source: customers
                }).on("typeahead:select", function (e, customer) {
                    viewmodel.customerId = customer.id;
                    


                });


            var movies = new Bloodhound({
                datumTokenizer: Bloodhound.tokenizers.obj.whitespace('name'),
                queryTokenizer: Bloodhound.tokenizers.whitespace,

                remote: {
                    url: '/api/movies?query=%QUERY',
                    wildcard: '%QUERY'
                }
            });

            $('#movie').typeahead({
                minLength: 2,
                highlight: true
            }, {
                    name: 'movies',
                    display: 'name',
                    source: movies
                }).on("typeahead:select", function (e, movie) {
                    
                    console.log(movie.id);
                    $("#movies").append("<li class='list-group-item'>" + movie.name + "<li>");
                    $("#movie").typeahead("val", "");

                    viewmodel.movieIds.push(movie.id);

                });

            $.validator.addMethod("validCustomer", function () {
                return viewmodel.customerId && viewmodel.customerId !== 0;
            }, "Please selecet a valid customer");

            $.validator.addMethod("atLeastAMovie", function () {
                return viewmodel.movieIds.length > 0;
            },"Please select at least a movie");

            var validator = $("#newRental").validate({
                submitHandler: function () {
                    e.preventDefault();

                    $.ajax({
                        url: "/api/newRentals",
                        method: "post",
                        data: viewmodel

                    }).done(function () {
                        toastr.success("Rentals Succesfully added");

                        $("#customer").typeahead("val", "");
                        $("#movie").typeahead("val", "");

                        $("#movies").empty();

                        viewmodel = { movieIds: [] };
                        validator.resetForm();
                    })
                        .fail(function () {
                            toastr.error("Something went Wrong")
                        });


                    return false;

                }

            });
            


        });

    </script>
    
    }

